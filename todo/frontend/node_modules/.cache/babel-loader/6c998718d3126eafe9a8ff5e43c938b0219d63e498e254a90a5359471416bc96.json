{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91799\\\\Desktop\\\\todo\\\\frontend\\\\todo\\\\src\\\\context\\\\TodoContext.js\",\n  _s = $RefreshSig$();\nimport { createContext } from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\nconst TodoProvider = ({\n  children\n}) => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/all\");\n      setTodos(response.data);\n    } catch (err) {\n      console.error(\"Failed to fetch todos:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const contextvalue = {\n    todos,\n    setTodos,\n    fetchTodos\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: contextvalue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n_s(TodoProvider, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoProvider;\nexport default TodoProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","TodoContext","TodoProvider","children","_s","todos","setTodos","fetchTodos","response","axios","get","data","err","console","error","contextvalue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91799/Desktop/todo/frontend/todo/src/context/TodoContext.js"],"sourcesContent":["import { createContext } from 'react'\r\nimport { useState,useEffect } from 'react';\r\n\r\nconst TodoContext = createContext()\r\n\r\nconst TodoProvider = ({ children }) => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const fetchTodos = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/all\");\r\n        setTodos(response.data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch todos:\", err);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n    const contextvalue = {todos, setTodos,fetchTodos}\r\n    return <TodoContext.Provider value={contextvalue}>\r\n                 {children}\r\n            </TodoContext.Provider>\r\n}\r\n\r\nexport default TodoProvider"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,+BAA+B,CAAC;MACjEJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EACDd,SAAS,CAAC,MAAM;IAChBS,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACJ,MAAMQ,YAAY,GAAG;IAACV,KAAK;IAAEC,QAAQ;IAACC;EAAU,CAAC;EACjD,oBAAOP,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAZ,QAAA,EACnCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AACnC,CAAC;AAAAjB,EAAA,CAlBKF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAoBlB,eAAeA,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
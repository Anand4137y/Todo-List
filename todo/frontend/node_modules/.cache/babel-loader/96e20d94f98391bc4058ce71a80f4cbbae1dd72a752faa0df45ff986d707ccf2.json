{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, useParams,Link } from \"react-router-dom\";\n// import axios from \"axios\";\n// import {\n//   Container,\n//   TextField,\n//   Button,\n//   Typography,\n//   Box,\n//   FormControl,\n//   InputLabel,\n//   Select,\n//   MenuItem,\n// } from \"@mui/material\";\n\n// function EditTodo() {\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const navigate = useNavigate();\n//   const { id } = useParams();\n\n//   useEffect(() => {\n//     const fetchTodo = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/getatodo/${id}`);\n//         const { title, description, status } = response.data;\n//         setTitle(title);\n//         setDescription(description);\n//         setStatus(status);\n//         console.log(response)\n//       } catch (err) {\n//         console.error(\"Failed to fetch the todo:\", err);\n//       }\n//     };\n\n//     fetchTodo();\n//   }, [id]);\n\n//   // Handle Form Submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       await axios.put(`http://localhost:5000/api/update/${id}`, {\n//         title,\n//         description,\n//         status,\n//       });\n//       navigate(\"/\");\n//     } catch (err) {\n//       alert(\"Failed to update the todo\");\n//     }\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Box\n//         sx={{\n//           mt: 5,\n//           p: 3,\n//           boxShadow: 3,\n//           borderRadius: 2,\n//           bgcolor: \"background.paper\",\n//         }}\n//       >\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//           Edit Todo\n//         </Typography>\n\n//         <form onSubmit={handleSubmit}>\n//           {/* Title Field */}\n//           <TextField\n//             label=\"Title\"\n//             variant=\"outlined\"\n//             fullWidth\n//             value={title}\n//             onChange={(e) => setTitle(e.target.value)}\n//             sx={{ mb: 2 }}\n//           />\n\n//           {/* Description Field */}\n//           <TextField\n//             label=\"Description\"\n//             variant=\"outlined\"\n//             fullWidth\n//             multiline\n//             rows={4}\n//             value={description}\n//             onChange={(e) => setDescription(e.target.value)}\n//             sx={{ mb: 2 }}\n//           />\n\n//           {/* Status Field */}\n//           <FormControl fullWidth sx={{ mb: 2 }}>\n//             <InputLabel id=\"status-label\">Status</InputLabel>\n//             <Select\n//               labelId=\"status-label\"\n//               value={status}\n//               onChange={(e) => setStatus(e.target.value)}\n//             >\n//               <MenuItem value=\"pending\">Pending</MenuItem>\n//               <MenuItem value=\"in-progress\">In Progress</MenuItem>\n//               <MenuItem value=\"completed\">Completed</MenuItem>\n//             </Select>\n//           </FormControl>\n\n//           {/* Update Button */}\n//           <Button\n//             type=\"submit\"\n//             component={Link} \n//             variant=\"outlined\"\n//             color=\"primary\"\n//             fullWidth\n//             sx={{ py: 1.5, mb: 2 }}\n//           >\n//             Update Todo\n//           </Button>\n//         </form>\n\n//         {/* Back Button */}\n//         <Button\n//          component={Link} \n//          to='/'\n//           variant=\"contained\"\n//           color=\"secondary\"\n//           fullWidth\n//         >\n//           Back\n//         </Button>\n//       </Box>\n//     </Container>\n//   );\n// }\n\n// export default EditTodo;","map":{"version":3,"names":[],"sources":["C:/Users/91799/Desktop/todo/frontend/todo/src/pages/EditTodo.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate, useParams,Link } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import {\r\n//   Container,\r\n//   TextField,\r\n//   Button,\r\n//   Typography,\r\n//   Box,\r\n//   FormControl,\r\n//   InputLabel,\r\n//   Select,\r\n//   MenuItem,\r\n// } from \"@mui/material\";\r\n\r\n// function EditTodo() {\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const { id } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const fetchTodo = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:5000/api/getatodo/${id}`);\r\n//         const { title, description, status } = response.data;\r\n//         setTitle(title);\r\n//         setDescription(description);\r\n//         setStatus(status);\r\n//         console.log(response)\r\n//       } catch (err) {\r\n//         console.error(\"Failed to fetch the todo:\", err);\r\n//       }\r\n//     };\r\n\r\n//     fetchTodo();\r\n//   }, [id]);\r\n\r\n//   // Handle Form Submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       await axios.put(`http://localhost:5000/api/update/${id}`, {\r\n//         title,\r\n//         description,\r\n//         status,\r\n//       });\r\n//       navigate(\"/\");\r\n//     } catch (err) {\r\n//       alert(\"Failed to update the todo\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//       <Box\r\n//         sx={{\r\n//           mt: 5,\r\n//           p: 3,\r\n//           boxShadow: 3,\r\n//           borderRadius: 2,\r\n//           bgcolor: \"background.paper\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n//           Edit Todo\r\n//         </Typography>\r\n\r\n//         <form onSubmit={handleSubmit}>\r\n//           {/* Title Field */}\r\n//           <TextField\r\n//             label=\"Title\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             value={title}\r\n//             onChange={(e) => setTitle(e.target.value)}\r\n//             sx={{ mb: 2 }}\r\n//           />\r\n\r\n//           {/* Description Field */}\r\n//           <TextField\r\n//             label=\"Description\"\r\n//             variant=\"outlined\"\r\n//             fullWidth\r\n//             multiline\r\n//             rows={4}\r\n//             value={description}\r\n//             onChange={(e) => setDescription(e.target.value)}\r\n//             sx={{ mb: 2 }}\r\n//           />\r\n\r\n//           {/* Status Field */}\r\n//           <FormControl fullWidth sx={{ mb: 2 }}>\r\n//             <InputLabel id=\"status-label\">Status</InputLabel>\r\n//             <Select\r\n//               labelId=\"status-label\"\r\n//               value={status}\r\n//               onChange={(e) => setStatus(e.target.value)}\r\n//             >\r\n//               <MenuItem value=\"pending\">Pending</MenuItem>\r\n//               <MenuItem value=\"in-progress\">In Progress</MenuItem>\r\n//               <MenuItem value=\"completed\">Completed</MenuItem>\r\n//             </Select>\r\n//           </FormControl>\r\n\r\n//           {/* Update Button */}\r\n//           <Button\r\n//             type=\"submit\"\r\n//             component={Link} \r\n//             variant=\"outlined\"\r\n//             color=\"primary\"\r\n//             fullWidth\r\n//             sx={{ py: 1.5, mb: 2 }}\r\n//           >\r\n//             Update Todo\r\n//           </Button>\r\n//         </form>\r\n\r\n//         {/* Back Button */}\r\n//         <Button\r\n//          component={Link} \r\n//          to='/'\r\n//           variant=\"contained\"\r\n//           color=\"secondary\"\r\n//           fullWidth\r\n//         >\r\n//           Back\r\n//         </Button>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default EditTodo;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}